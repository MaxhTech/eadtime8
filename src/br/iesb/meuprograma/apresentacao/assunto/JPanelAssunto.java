/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.iesb.meuprograma.apresentacao.assunto;

import br.iesb.meuprograma.negocio.NegocioException;
import br.iesb.meuprograma.negocio.assunto.Assunto;
import br.iesb.meuprograma.negocio.assunto.AssuntoBO;
import java.awt.Point;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kimura
 */
public class JPanelAssunto extends javax.swing.JPanel {
    
    private List<Assunto> listaAssuntos = new ArrayList<Assunto>();
    private AssuntoBO bo = new AssuntoBO();

    /**
     * Creates new form JPanelAssunto
     */
    public JPanelAssunto() {
        initComponents();
        this.LoadTable();
    }
    
    private void LoadTable() {
        try {
            this.listaAssuntos = this.bo.listar();
            DefaultTableModel model = (DefaultTableModel) this.assuntoTable.getModel();
            
            for (int i = this.assuntoTable.getRowCount() - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            for (Assunto a : this.listaAssuntos) {
                model.addRow(new Object[]{
                    a.getAssuntoId(), a.getAssunto(), a.isAtivo() ? "Ativo" : "Inativo"
                });
            }
        } catch (NegocioException ex) {
            Logger.getLogger(JPanelAssunto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assuntoTable = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        title.setText("Assuntos");

        assuntoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Assunto", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        assuntoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assuntoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(assuntoTable);
        if (assuntoTable.getColumnModel().getColumnCount() > 0) {
            assuntoTable.getColumnModel().getColumn(0).setResizable(false);
            assuntoTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            assuntoTable.getColumnModel().getColumn(1).setResizable(false);
            assuntoTable.getColumnModel().getColumn(1).setPreferredWidth(400);
            assuntoTable.getColumnModel().getColumn(2).setResizable(false);
            assuntoTable.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEditar)
                    .addComponent(btnDeletar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        JDialogAssunto assuntoDialog = new JDialogAssunto(new javax.swing.JFrame(), true);
        assuntoDialog.setVisible(true);
        this.LoadTable();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void assuntoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assuntoTableMouseClicked
        // TODO add your handling code here:
        Point p = evt.getPoint();
        int row = this.assuntoTable.rowAtPoint(p);
        if (evt.getClickCount() == 2) {
            this.openEdit(row);
        }
    }//GEN-LAST:event_assuntoTableMouseClicked
    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int row = this.assuntoTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um assunto para editar");
            this.LoadTable();
        } else {
            this.openEdit(row);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int row = this.assuntoTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um assunto para excluir");
        } else {
            try {
                int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente deletar esse assunto?");
                if (confirm == JOptionPane.YES_OPTION) {
                    this.bo.excluir(this.listaAssuntos.get(row));
                    JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                    this.LoadTable();
                }
            } catch (NegocioException ex) {
                Logger.getLogger(JPanelAssunto.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void openEdit(int row) {
        JDialogAssunto assuntoDialog = new JDialogAssunto(
                new javax.swing.JFrame(), 
                true, 
                this.listaAssuntos.get(row));
        assuntoDialog.setVisible(true);
        this.LoadTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable assuntoTable;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
